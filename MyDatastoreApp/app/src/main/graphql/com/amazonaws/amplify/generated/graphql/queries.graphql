# this is an auto generated file. This will be overwritten
query GetBlog($id: ID!) {
  getBlog(id: $id) {
    id
    name
    posts {
      items {
        id
        title
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        blogPostsId
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListBlogs(
  $filter: ModelBlogFilterInput
  $limit: Int
  $nextToken: String
) {
  listBlogs(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      posts {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncBlogs(
  $filter: ModelBlogFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncBlogs(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      posts {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetPost($id: ID!, $title: String!) {
  getPost(id: $id, title: $title) {
    id
    title
    blog {
      id
      name
      posts {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    comments {
      items {
        title
        content
        likes
        description
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        postCommentsId
        postCommentsTitle
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    blogPostsId
  }
}
query ListPosts(
  $id: ID
  $title: ModelStringKeyConditionInput
  $filter: ModelPostFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listPosts(
    id: $id
    title: $title
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      title
      blog {
        id
        name
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      comments {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      blogPostsId
    }
    nextToken
    startedAt
  }
}
query SyncPosts(
  $filter: ModelPostFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncPosts(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      title
      blog {
        id
        name
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      comments {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      blogPostsId
    }
    nextToken
    startedAt
  }
}
query GetComment($title: String!, $content: String!, $likes: Int!) {
  getComment(title: $title, content: $content, likes: $likes) {
    post {
      id
      title
      blog {
        id
        name
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      comments {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      blogPostsId
    }
    title
    content
    likes
    description
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    postCommentsId
    postCommentsTitle
  }
}
query ListComments(
  $title: String
  $contentLikes: ModelCommentPrimaryCompositeKeyConditionInput
  $filter: ModelCommentFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listComments(
    title: $title
    contentLikes: $contentLikes
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      post {
        id
        title
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        blogPostsId
      }
      title
      content
      likes
      description
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      postCommentsId
      postCommentsTitle
    }
    nextToken
    startedAt
  }
}
query SyncComments(
  $filter: ModelCommentFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncComments(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      post {
        id
        title
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        blogPostsId
      }
      title
      content
      likes
      description
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      postCommentsId
      postCommentsTitle
    }
    nextToken
    startedAt
  }
}
query GetModelCompositeMultiplePk(
  $id: ID!
  $location: String!
  $name: String!
) {
  getModelCompositeMultiplePk(id: $id, location: $location, name: $name) {
    id
    location
    name
    lastName
    age
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListModelCompositeMultiplePks(
  $id: ID
  $locationName: ModelModelCompositeMultiplePkPrimaryCompositeKeyConditionInput
  $filter: ModelModelCompositeMultiplePkFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listModelCompositeMultiplePks(
    id: $id
    locationName: $locationName
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      location
      name
      lastName
      age
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncModelCompositeMultiplePks(
  $filter: ModelModelCompositeMultiplePkFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncModelCompositeMultiplePks(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      location
      name
      lastName
      age
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetBlogWithDefaultHasOne($id: ID!) {
  getBlogWithDefaultHasOne(id: $id) {
    title
    owner {
      name
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    blogWithDefaultHasOneOwnerId
  }
}
query ListBlogWithDefaultHasOnes(
  $filter: ModelBlogWithDefaultHasOneFilterInput
  $limit: Int
  $nextToken: String
) {
  listBlogWithDefaultHasOnes(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      title
      owner {
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      blogWithDefaultHasOneOwnerId
    }
    nextToken
    startedAt
  }
}
query SyncBlogWithDefaultHasOnes(
  $filter: ModelBlogWithDefaultHasOneFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncBlogWithDefaultHasOnes(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      title
      owner {
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      blogWithDefaultHasOneOwnerId
    }
    nextToken
    startedAt
  }
}
query GetBlogWithCustomHasOne($id: ID!) {
  getBlogWithCustomHasOne(id: $id) {
    title
    ownerRefId
    owner {
      name
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    desc
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListBlogWithCustomHasOnes(
  $filter: ModelBlogWithCustomHasOneFilterInput
  $limit: Int
  $nextToken: String
) {
  listBlogWithCustomHasOnes(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      title
      ownerRefId
      owner {
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      desc
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncBlogWithCustomHasOnes(
  $filter: ModelBlogWithCustomHasOneFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncBlogWithCustomHasOnes(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      title
      ownerRefId
      owner {
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      desc
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetUser($id: ID!) {
  getUser(id: $id) {
    name
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
) {
  listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      name
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncUsers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      name
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetProject11($id: ID!, $name: String!) {
  getProject11(id: $id, name: $name) {
    id
    name
    team {
      id
      name
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    desc
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    project11TeamId
    project11TeamName
  }
}
query ListProject11s(
  $id: ID
  $name: ModelStringKeyConditionInput
  $filter: ModelProject11FilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listProject11s(
    id: $id
    name: $name
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      name
      team {
        id
        name
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      project11TeamId
      project11TeamName
    }
    nextToken
    startedAt
  }
}
query SyncProject11s(
  $filter: ModelProject11FilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncProject11s(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      team {
        id
        name
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      project11TeamId
      project11TeamName
    }
    nextToken
    startedAt
  }
}
query GetTeam11($id: ID!, $name: String!) {
  getTeam11(id: $id, name: $name) {
    id
    name
    desc
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListTeam11s(
  $id: ID
  $name: ModelStringKeyConditionInput
  $filter: ModelTeam11FilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listTeam11s(
    id: $id
    name: $name
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      name
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncTeam11s(
  $filter: ModelTeam11FilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTeam11s(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetProject12($id: ID!, $name: String!) {
  getProject12(id: $id, name: $name) {
    id
    name
    team {
      id
      name
      project {
        id
        name
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        project12TeamId
        project12TeamName
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      team12ProjectId
      team12ProjectName
    }
    desc
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    project12TeamId
    project12TeamName
  }
}
query ListProject12s(
  $id: ID
  $name: ModelStringKeyConditionInput
  $filter: ModelProject12FilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listProject12s(
    id: $id
    name: $name
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      name
      team {
        id
        name
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        team12ProjectId
        team12ProjectName
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      project12TeamId
      project12TeamName
    }
    nextToken
    startedAt
  }
}
query SyncProject12s(
  $filter: ModelProject12FilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncProject12s(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      team {
        id
        name
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        team12ProjectId
        team12ProjectName
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      project12TeamId
      project12TeamName
    }
    nextToken
    startedAt
  }
}
query GetTeam12($id: ID!, $name: String!) {
  getTeam12(id: $id, name: $name) {
    id
    name
    project {
      id
      name
      team {
        id
        name
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        team12ProjectId
        team12ProjectName
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      project12TeamId
      project12TeamName
    }
    desc
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    team12ProjectId
    team12ProjectName
  }
}
query ListTeam12s(
  $id: ID
  $name: ModelStringKeyConditionInput
  $filter: ModelTeam12FilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listTeam12s(
    id: $id
    name: $name
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      name
      project {
        id
        name
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        project12TeamId
        project12TeamName
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      team12ProjectId
      team12ProjectName
    }
    nextToken
    startedAt
  }
}
query SyncTeam12s(
  $filter: ModelTeam12FilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTeam12s(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      project {
        id
        name
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        project12TeamId
        project12TeamName
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      team12ProjectId
      team12ProjectName
    }
    nextToken
    startedAt
  }
}
query GetPost21($id: ID!, $title: String!) {
  getPost21(id: $id, title: $title) {
    id
    title
    comments {
      items {
        id
        content
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        post21CommentsId
        post21CommentsTitle
      }
      nextToken
      startedAt
    }
    desc
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListPost21s(
  $id: ID
  $title: ModelStringKeyConditionInput
  $filter: ModelPost21FilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listPost21s(
    id: $id
    title: $title
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      title
      comments {
        nextToken
        startedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncPost21s(
  $filter: ModelPost21FilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncPost21s(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      title
      comments {
        nextToken
        startedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetComment21($id: ID!, $content: String!) {
  getComment21(id: $id, content: $content) {
    id
    content
    desc
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    post21CommentsId
    post21CommentsTitle
  }
}
query ListComment21s(
  $id: ID
  $content: ModelStringKeyConditionInput
  $filter: ModelComment21FilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listComment21s(
    id: $id
    content: $content
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      content
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      post21CommentsId
      post21CommentsTitle
    }
    nextToken
    startedAt
  }
}
query SyncComment21s(
  $filter: ModelComment21FilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncComment21s(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      content
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      post21CommentsId
      post21CommentsTitle
    }
    nextToken
    startedAt
  }
}
query GetPost22($id: ID!, $title: String!) {
  getPost22(id: $id, title: $title) {
    id
    title
    comments {
      items {
        id
        content
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        post22CommentsId
        post22CommentsTitle
      }
      nextToken
      startedAt
    }
    desc
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListPost22s(
  $id: ID
  $title: ModelStringKeyConditionInput
  $filter: ModelPost22FilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listPost22s(
    id: $id
    title: $title
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      title
      comments {
        nextToken
        startedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncPost22s(
  $filter: ModelPost22FilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncPost22s(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      title
      comments {
        nextToken
        startedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetComment22($id: ID!, $content: String!) {
  getComment22(id: $id, content: $content) {
    id
    content
    post {
      id
      title
      comments {
        nextToken
        startedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    desc
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    post22CommentsId
    post22CommentsTitle
  }
}
query ListComment22s(
  $id: ID
  $content: ModelStringKeyConditionInput
  $filter: ModelComment22FilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listComment22s(
    id: $id
    content: $content
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      content
      post {
        id
        title
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      post22CommentsId
      post22CommentsTitle
    }
    nextToken
    startedAt
  }
}
query SyncComment22s(
  $filter: ModelComment22FilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncComment22s(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      content
      post {
        id
        title
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      post22CommentsId
      post22CommentsTitle
    }
    nextToken
    startedAt
  }
}
query GetPost31($id: ID!) {
  getPost31(id: $id) {
    id
    title
    content
    tags {
      items {
        id
        post31Id
        tag31Id
        tag31label
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    desc
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListPost31s(
  $filter: ModelPost31FilterInput
  $limit: Int
  $nextToken: String
) {
  listPost31s(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      title
      content
      tags {
        nextToken
        startedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncPost31s(
  $filter: ModelPost31FilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncPost31s(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      title
      content
      tags {
        nextToken
        startedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetTag31($id: ID!, $label: String!) {
  getTag31(id: $id, label: $label) {
    id
    label
    posts {
      items {
        id
        post31Id
        tag31Id
        tag31label
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    desc
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListTag31s(
  $id: ID
  $label: ModelStringKeyConditionInput
  $filter: ModelTag31FilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listTag31s(
    id: $id
    label: $label
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      label
      posts {
        nextToken
        startedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncTag31s(
  $filter: ModelTag31FilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTag31s(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      label
      posts {
        nextToken
        startedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetPost35($postId: ID!, $title: String!) {
  getPost35(postId: $postId, title: $title) {
    postId
    title
    comments {
      items {
        commentId
        content
        postId
        postTitle
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    desc
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListPost35s(
  $postId: ID
  $title: ModelStringKeyConditionInput
  $filter: ModelPost35FilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listPost35s(
    postId: $postId
    title: $title
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      postId
      title
      comments {
        nextToken
        startedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncPost35s(
  $filter: ModelPost35FilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncPost35s(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      postId
      title
      comments {
        nextToken
        startedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetComment35($commentId: ID!, $content: String!) {
  getComment35(commentId: $commentId, content: $content) {
    commentId
    content
    post {
      postId
      title
      comments {
        nextToken
        startedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    postId
    postTitle
    desc
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListComment35s(
  $commentId: ID
  $content: ModelStringKeyConditionInput
  $filter: ModelComment35FilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listComment35s(
    commentId: $commentId
    content: $content
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      commentId
      content
      post {
        postId
        title
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      postId
      postTitle
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncComment35s(
  $filter: ModelComment35FilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncComment35s(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      commentId
      content
      post {
        postId
        title
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      postId
      postTitle
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetPost36($postId: ID!, $title: String!) {
  getPost36(postId: $postId, title: $title) {
    postId
    title
    comments {
      items {
        commentId
        content
        postId
        postTitle
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListPost36s(
  $postId: ID
  $title: ModelStringKeyConditionInput
  $filter: ModelPost36FilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listPost36s(
    postId: $postId
    title: $title
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      postId
      title
      comments {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncPost36s(
  $filter: ModelPost36FilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncPost36s(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      postId
      title
      comments {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetComment36($commentId: ID!, $content: String!) {
  getComment36(commentId: $commentId, content: $content) {
    commentId
    content
    postId
    postTitle
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListComment36s(
  $commentId: ID
  $content: ModelStringKeyConditionInput
  $filter: ModelComment36FilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listComment36s(
    commentId: $commentId
    content: $content
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      commentId
      content
      postId
      postTitle
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncComment36s(
  $filter: ModelComment36FilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncComment36s(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      commentId
      content
      postId
      postTitle
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetProjectIB($projectId: ID!, $name: String!) {
  getProjectIB(projectId: $projectId, name: $name) {
    projectId
    name
    team {
      teamId
      name
      project {
        projectId
        name
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        projectIBTeamTeamId
        projectIBTeamName
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      teamIBProjectProjectId
      teamIBProjectName
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    projectIBTeamTeamId
    projectIBTeamName
  }
}
query ListProjectIBS(
  $projectId: ID
  $name: ModelStringKeyConditionInput
  $filter: ModelProjectIBFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listProjectIBS(
    projectId: $projectId
    name: $name
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      projectId
      name
      team {
        teamId
        name
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        teamIBProjectProjectId
        teamIBProjectName
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      projectIBTeamTeamId
      projectIBTeamName
    }
    nextToken
    startedAt
  }
}
query SyncProjectIBS(
  $filter: ModelProjectIBFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncProjectIBS(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      projectId
      name
      team {
        teamId
        name
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        teamIBProjectProjectId
        teamIBProjectName
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      projectIBTeamTeamId
      projectIBTeamName
    }
    nextToken
    startedAt
  }
}
query GetTeamIB($teamId: ID!, $name: String!) {
  getTeamIB(teamId: $teamId, name: $name) {
    teamId
    name
    project {
      projectId
      name
      team {
        teamId
        name
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        teamIBProjectProjectId
        teamIBProjectName
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      projectIBTeamTeamId
      projectIBTeamName
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    teamIBProjectProjectId
    teamIBProjectName
  }
}
query ListTeamIBS(
  $teamId: ID
  $name: ModelStringKeyConditionInput
  $filter: ModelTeamIBFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listTeamIBS(
    teamId: $teamId
    name: $name
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      teamId
      name
      project {
        projectId
        name
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        projectIBTeamTeamId
        projectIBTeamName
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      teamIBProjectProjectId
      teamIBProjectName
    }
    nextToken
    startedAt
  }
}
query SyncTeamIBS(
  $filter: ModelTeamIBFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTeamIBS(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      teamId
      name
      project {
        projectId
        name
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        projectIBTeamTeamId
        projectIBTeamName
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      teamIBProjectProjectId
      teamIBProjectName
    }
    nextToken
    startedAt
  }
}
query GetBook($isbn: ID!) {
  getBook(isbn: $isbn) {
    isbn
    name
    author
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListBooks(
  $isbn: ID
  $filter: ModelBookFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listBooks(
    isbn: $isbn
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      isbn
      name
      author
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncBooks(
  $filter: ModelBookFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncBooks(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      isbn
      name
      author
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetPostTags31($id: ID!) {
  getPostTags31(id: $id) {
    id
    post31Id
    tag31Id
    tag31label
    post31 {
      id
      title
      content
      tags {
        nextToken
        startedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    tag31 {
      id
      label
      posts {
        nextToken
        startedAt
      }
      desc
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListPostTags31s(
  $filter: ModelPostTags31FilterInput
  $limit: Int
  $nextToken: String
) {
  listPostTags31s(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      post31Id
      tag31Id
      tag31label
      post31 {
        id
        title
        content
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      tag31 {
        id
        label
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncPostTags31s(
  $filter: ModelPostTags31FilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncPostTags31s(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      post31Id
      tag31Id
      tag31label
      post31 {
        id
        title
        content
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      tag31 {
        id
        label
        desc
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
